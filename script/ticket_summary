#!/usr/bin/env ruby
require File.dirname(__FILE__) + '/../config/boot'
require RAILS_ROOT + '/config/environment'

completed_line_items = Order.all(:include => [:paypal_payment_notification, {:line_items => :product_item}],:conditions => {:ruby_kaigi_id => RubyKaigi.latest.id}).select{|o| o.completed? }.map{|o| o.line_items }.flatten;nil

completed_line_items_group_by_item_code = completed_line_items.group_by {|i| i.product_item.item_code }
by_code = completed_line_items_group_by_item_code.map do |(code, items)|
  count_by_date =items.group_by {|i| i.updated_at.to_date}.map {|date, arr| {date => arr.size}}
  { code => count_by_date }
end;nil

puts "=" * 78
now_in_jst =  ActiveSupport::TimeWithZone.new(Time.now.utc, TZInfo::Timezone.get("Asia/Tokyo")).to_s
puts "  Item Code Summary on #{now_in_jst}"
puts "=" * 78
puts ""
by_code.each do |row|
  item_code = row.keys.first
  by_date = row.values.first
  puts "* #{item_code}"
  total = 0
  by_date.each do |date_row|
    date = date_row.keys.first.strftime('%Y-%m-%d')
    count = date_row.values.first
    total += count
    count_disp = "%3d" % count
    puts "  - #{date}: #{count_disp}"
  end
  puts "  - #{'%10s' % 'total'}: #{'%3d' % total}"
  puts ""
end;nil
